[workspace.package]
version = "0.2.0-beta.4"
authors = ["Ëóç+85CD"]
edition = "2021"
rust-version = "1.75"
description = "Self-hosted & Fully-automated ActivityPub Bridge for Static Sites."
documentation = "https://hatsu.cli.rs"
readme = "README.md"
homepage = "https://hatsu.cli.rs"
repository = "https://github.com/importantimport/hatsu"
license = "AGPL-3.0"
publish = false

[package]
name = "hatsu"
version.workspace = true
edition.workspace = true
publish.workspace = true
readme.workspace = true
license.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
homepage.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[profile.release]
codegen-units = 1
lto = "fat"
opt-level = "z"
panic = "abort"
strip = "symbols"

[workspace]
members = [
    ".",
    "crates/api_admin",
    "crates/api_apub",
    "crates/api_mastodon",
    "crates/apub",
    "crates/backend",
    "crates/db_migration",
    "crates/db_schema",
    "crates/feed",
    "crates/nodeinfo",
    "crates/openapi",
    "crates/scheduler",
    "crates/utils",
    "crates/well_known",
]

[workspace.dependencies]
hatsu_api_admin = { path = "./crates/api_admin" }
hatsu_api_apub = { path = "./crates/api_apub" }
hatsu_api_mastodon = { path = "./crates/api_mastodon" }
hatsu_apub = { path = "./crates/apub" }
hatsu_backend = { path = "./crates/backend" }
hatsu_db_migration = { path = "./crates/db_migration" }
hatsu_db_schema = { path = "./crates/db_schema" }
hatsu_feed = { path = "./crates/feed" }
hatsu_nodeinfo = { path = "./crates/nodeinfo" }
hatsu_openapi = { path = "./crates/openapi" }
hatsu_scheduler = { path = "./crates/scheduler" }
hatsu_utils = { path = "./crates/utils" }
hatsu_well_known = { path = "./crates/well_known" }
activitypub_federation = { version = "0.5", default-features = false, features = [
    "axum",
] }
anyhow = "1.0"
async-recursion = "1"
async-trait = "0.1"
axum = { version = "0.6", features = ["tokio", "macros"] }
# axum-extra = { version = "0.8", features = ["query", "typed-routing"] }
base64-simd = "0.8"
chrono = "0.4"
enum_delegate = "0.2"
feed-rs = "1.3"
futures = "0.3"
markdown = "1.0.0-alpha.13"
reqwest = { version = "0.11", features = ["json"] }
scraper = "0.17"
sea-orm = { version = "0.12", features = [
    "sqlx-postgres",
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "macros",
    "with-chrono",
    "with-json",
    "with-uuid",
] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.0", features = ["full"] }
tokio-cron-scheduler = "*"
tokio-graceful-shutdown = "0.13"
tower-http = { version = "0.4", features = ["cors", "trace"] }
tracing = { version = "0.1" }
tracing-error = "0.2"
url = { version = "2.4", features = ["serde"] }
urlencoding = "2"
utoipa = { version = "4", features = ["axum_extras", "url", "uuid"] }
uuid = { version = "1.4", features = [
    "v4",
    "v7",
    "fast-rng",
    "macro-diagnostics",
] }

[dependencies]
openssl = { version = "*", features = ["vendored"] }
hatsu_api_apub = { workspace = true }
hatsu_apub = { workspace = true }
hatsu_backend = { workspace = true }
hatsu_db_migration = { workspace = true }
hatsu_db_schema = { workspace = true }
hatsu_scheduler = { workspace = true }
hatsu_utils = { workspace = true }
human-panic = "2"
activitypub_federation = { workspace = true }
dotenvy = "0.15"
sea-orm = { workspace = true }
snmalloc-rs = "0.3"
# https://github.com/launchbadge/sqlx/issues/3189
# https://github.com/launchbadge/sqlx/pull/3190
time = "=0.3.34"
tokio = { workspace = true }
tokio-graceful-shutdown = { workspace = true }
tracing = { workspace = true }
tracing-error = { workspace = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
